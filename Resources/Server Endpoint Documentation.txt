GET Endpoints:
    # All these endpoints can be sent parameters that are column names

	# These endpoints use 'AND' between parameters
	# Example: SELECT * FROM users WHERE uid="1" AND name="Anthony"
	# http://10.10.9.188:3000/getusers?uid=1&name=Anthony
	/getusers
	/gettrips
	/gettake
	/getrate
	/getreport
	/getmessage
	
	# These endpoints use 'OR' between parameters
	# Example: SELECT * FROM trips WHERE isCompleted=1 OR isCancelled=1
	# http:10.10.9.188:3000/gettripsor?isCompleted=1&isCancelled=1
	/getusersor
	/gettripsor
	/gettakeor
	/getrateor
	/getreportor
	/getmessageor

    # Other GET Endpoints
	/getopentrips
	    # Takes parameter "uID", returns trips that user is able to join
	    # Returns trips where isCompleted=0, isCancelled=0, SeatsAvailable>0, and user not already on the trip
	    # Example: SELECT * FROM trips WHERE isCompleted = 0 AND isCancelled = 0 AND SeatsAvailable > 0 AND tID NOT IN (SELECT tID FROM take WHERE uID='1')
	    # http://10.10.9.188:3000/getopentrips?uID=1

	/getusertrips
	    # Takes parameter "uID", returns trips the user has joined
	    # Example: SELECT * FROM trips WHERE tID IN (SELECT tID FROM take WHERE uID=1)
	    # http://10.10.9.188:3000/getusertrips?uID=1

	/getuserstomessage
	    # Takes parameter "uID", returns users on trips that the user is on and can message
	    # Example: SELECT * FROM users WHERE uID IN (SELECT uID FROM take WHERE tID IN (SELECT tID FROM take WHERE uID=1))
	    # http://10.10.9.188:3000/getuserstomessage?uID=1

	/getmessagesbetweenusers
	    # Takes parameters "uID1" and "uID2", returns all messages between those users sorted oldest to newest
	    # Example: SELECT * FROM message WHERE (senderID=1 AND receiverID=5) OR (senderID=5 AND receiverID=1) ORDER BY time ASC
	    # http://10.10.9.188:3000/getmessagesbetweenusers?uID1=1&uID2=5

	/gettripsrange
	    # Takes parameters "min" and "max", only returns non-completed and non-cancelled trips
	    # Example: SELECT * FROM trips WHERE time >= MIN_TIMESTAMP AND time <= MAX_TIMESTAMP AND isCompleted=0 AND isCancelled=0 ORDER BY time ASC
	    # http://10.10.9.188:3000/gettripsrange?min=MIN_TIMESTAMP&max=MAX_TIMESTAMP


PUT Endpoints:
    # All these endpoints can be sent parameters that are column names
	/updatetrips
	    # Updates an entry into the take table identified by the tID
	    # Example: UPDATE trips SET isCompleted=1 WHERE tID=1
	    # http://10.10.9.188:3000/updatetrips?tID=1&isCompleted=1;
	

POST Endpoints:
	/postusers
	    # Adds a new user to the users table, takes JSON with the name, accountName, and email of the new user
	    # Example: INSERT INTO users (name, accountName, isDriver, email) VALUES (name2, accountName2, 0, email)
	    # http://10.10.9.188:3000/postusers
	    # POST Request Details:
		Headers:	"Content-Type", "application/json"
		Body:		JSON.stringify({
		  "name": "name2",
		  "accountName": "accountName2",
		  "email": "email2@gmail.com"
		});

	/posttrips
	    # Adds a new trip to the trips table, and adds the creating user to that trip in the take table
	    # Example: INSERT INTO trips (destination, startLocation, time, seatsAvailable, isCompleted, isCancelled) VALUES (destination4, sLocation4, time4, 0, 0)
		    INSERT INTO take (uID, tID) VALUES (creatingUserID, tID)
	    # http://10.10.9.188:3000/posttrips
	    # POST Request Details:
		Headers:	"Content-Type", "application/json"
		Body:		JSON.stringify({
		  "uID": "creatingUserID",
		  "destination": "destination4",
		  "startLocation": "sLocation4",
		  "time": "time4"
		});

	/jointrips
	    # Adds a user onto a trip, and decrements the number of SeatsAvailable
	    # Example: INSERT INTO take (uID, tID) VALUES (userID, tripID)
	    # http://10.10.9.188:3000/jointrips
	    # POST Request Details:
		Headers:	"Content-Type", "application/json"
		Body:		JSON.stringify({
		  "uID": "userID",
		  "tID": "tripID"
		});

	/postmessage
	    # Adds a message to the database
	    # Example: INSERT INTO message (message, time, senderID, receiverID) VALUES ('Test Message', '2022-09-04 17:30:00', '1', '3')
	    # http://10.10.9.188:3000/postmessage
	    # POST Request Details:
		Headers:	"Content-Type", "application/json"
		Body:		JSON.stringify({
		  "message" : "Test Message",
		  "time" : "2022-09-04 17:30:00",
		  "senderID" : "1",
		  "receiverID" : "3"
		});
